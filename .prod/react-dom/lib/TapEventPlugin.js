"use strict";function getAxisCoordOfEvent(e,t){var o=TouchEventUtils.extractSingleTouch(t);return o?o[e.page]:e.page in t?t[e.page]:t[e.client]+ViewportMetrics[e.envScroll]}function getDistance(e,t){var o=getAxisCoordOfEvent(Axis.x,t),s=getAxisCoordOfEvent(Axis.y,t);return Math.pow(Math.pow(o-e.x,2)+Math.pow(s-e.y,2),.5)}var EventPluginUtils=require("./EventPluginUtils"),EventPropagators=require("./EventPropagators"),SyntheticUIEvent=require("./SyntheticUIEvent"),TouchEventUtils=require("fbjs/lib/TouchEventUtils"),ViewportMetrics=require("./ViewportMetrics"),isStartish=EventPluginUtils.isStartish,isEndish=EventPluginUtils.isEndish,tapMoveThreshold=10,startCoords={x:0,y:0},Axis={x:{page:"pageX",client:"clientX",envScroll:"currentPageScrollLeft"},y:{page:"pageY",client:"clientY",envScroll:"currentPageScrollTop"}},touchEvents=["topTouchStart","topTouchCancel","topTouchEnd","topTouchMove"],dependencies=["topMouseDown","topMouseMove","topMouseUp"].concat(touchEvents),eventTypes={touchTap:{phasedRegistrationNames:{bubbled:"onTouchTap",captured:"onTouchTapCapture"},dependencies:dependencies}},usedTouch=!1,usedTouchTime=0,TOUCH_DELAY=1e3,TapEventPlugin={tapMoveThreshold:tapMoveThreshold,eventTypes:eventTypes,extractEvents:function(e,t,o,s){if(!isStartish(e)&&!isEndish(e)){return null}if(touchEvents.indexOf(e)!==-1){usedTouch=!0;usedTouchTime=Date.now()}else{if(usedTouch&&Date.now()-usedTouchTime<TOUCH_DELAY){return null}}var n=null,i=getDistance(startCoords,o);isEndish(e)&&i<tapMoveThreshold&&(n=SyntheticUIEvent.getPooled(eventTypes.touchTap,t,o,s));if(isStartish(e)){startCoords.x=getAxisCoordOfEvent(Axis.x,o);startCoords.y=getAxisCoordOfEvent(Axis.y,o)}else{if(isEndish(e)){startCoords.x=0;startCoords.y=0}}EventPropagators.accumulateTwoPhaseDispatches(n);return n}};module.exports=TapEventPlugin;